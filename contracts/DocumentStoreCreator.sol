// SPDX-License-Identifier: Apache-2.0

pragma solidity ^0.8.0;

import "./DocumentStore.sol";

/**
 * @title DocumentStoreCreator
 * @dev Naming this factory contract as DocumentStoreCreator so that typechain can name the factory of this
 * contract as DocumentStoreCreatorFactory and it does not collide with the automatically generated
 * DocumentStoreFactory automatically generated by typechain
 */
contract DocumentStoreCreator {
  /**
   * @notice Emitted when a new DocumentStore instance is deployed
   * @param instance The address of the newly deployed DocumentStore instance
   * @param creator The address of the creator of the new DocumentStore instance
   */
  event DocumentStoreDeployed(address indexed instance, address indexed creator);

  /**
   * @notice Deploys a new DocumentStore instance with the given name
   * @param name The name of the new DocumentStore instance
   * @return The address of the newly deployed DocumentStore instance
   */
  function deploy(string memory name) public returns (address) {
    // solhint-disable-next-line mark-callable-contracts
    DocumentStore instance = new DocumentStore(name, msg.sender);
    emit DocumentStoreDeployed(address(instance), msg.sender);
    return address(instance);
  }
}
